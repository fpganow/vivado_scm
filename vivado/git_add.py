#!python3

import argparse
import os
import subprocess
import sys

def is_file(path:str) -> str:
    if not os.path.isfile(path):
        raise argparse.ArgumentTypeError(f"{path} not valid")
    return path

def get_args() -> argparse.Namespace:
    description = ("Tool for adding Vivado exported tcl related files to git")
    parser = argparse.ArgumentParser(description=description)

    parser.add_argument(
        "--tcl-file",
        required=True,
        type=is_file,
        help="File generated by Vivado Export"
    )
    parser.add_argument(
        "--dry-run",
        action="store_true",
        help="Dry Run mode."
    )
    parser.add_argument(
        "--verbose",
        action="store_true",
        help="More output."
    )
    return parser

def main() -> None:
    print("Git Add")

    # WSL: linux
    # command prompt/Powershell: win32
    from pathlib import Path, PureWindowsPath, PosixPath
    parser = get_args()
    args = parser.parse_args()

    start_section = False

    fin = open(args.tcl_file, 'r')
    for line in fin:
        if line is not None and args.verbose:
            print(f'Examining line: {line}, {len(line)}')
        if line is None or len(line) == 0:
            next
        elif len(line.strip()) == 0 or line[1:].strip() == "<none>":
            next
        elif line.startswith("# 2. The following source(s) files"):
            start_section = True
        elif line.startswith("# 3. The following remote source"):
            if args.verbose:
                print(f'Skipping line: {line}')
            next
        elif start_section and line.startswith("#*****************"):
            if args.verbose:
                print(f'Skipping line: {line}')
            break
        elif start_section:
            if args.verbose:
                print(f'checking: {line}')
            if line.startswith("#    (Please see the"):
                next
            else:
                clean_line = line.strip()[1:].strip()
                clean_line = clean_line.replace('"','')
                if len(clean_line) != 0:
                    if sys.platform == 'win32':
                        file_path = clean_line
                    else:
                        clean_line = clean_line[0].lower() + clean_line[1:]
                        file_path = '/mnt/' + clean_line.replace(':','')

                    cmd_args = ["git", "add", file_path]
                    if args.dry_run:
                        print(f'[DRY-RUN] {cmd_args}')
                    else:
                        print(f'git add {cmd_args}')
                        subprocess.run(cmd_args)

    fin.close()

    # Add tcl file as well
    cmd_args = ["git", "add", args.tcl_file]
    if args.dry_run:
        print(f'[DRY-RUN] {cmd_args}')
    else:
        subprocess.run(cmd_args)

if __name__ == "__main__":
    main()
